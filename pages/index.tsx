import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import Highlight, { defaultProps } from 'prism-react-renderer';
import dracula from 'prism-react-renderer/themes/oceanicNext';

const primary = `
<button class="kyper-btn primary">
   Primary
</button>
`;

const primaryIcon = `
<button class="kyper-btn primary icon">
  <icon class='addoutline'/>
   Primary
</button>
`;

const primaryDisabled = `
<button class="kyper-btn primary icon" disabled>
   Primary
</button>
`;

const neutral = `
<button class="kyper-btn neutral">
   Neutral
</button>
`;
const neutralDisabled = `
<button class="kyper-btn neutral" disabled>
   Neutral
</button>
`;
const neutralIcon = `
<button className="kyper-btn neutral icon">
  Neutral
  <icon class='desktop'/>
</button>
`;

const transparent = `
<button className="kyper-btn transparent">
  Neutral
</button>
`;
const transparentDisabled = `
<button className="kyper-btn transparent" disabled>
  Neutral
</button>
`;

const destructive = `
<button className="kyper-btn destructive">
  Neutral
</button>
`;

const destructiveDisabled = `
<button className="kyper-btn destructive" disabled>
  Neutral
</button>
`;

const Home: NextPage = () => {
  return (
    <div>
      <Head>
        <link rel="stylesheet" href="https://use.typekit.net/yin4fcc.css" />
        <title>Kyper CSS Library</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button className="kyper-btn primary">Primary</button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={primary}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>

        <button className="kyper-btn primary icon">
          <svg>
            <path
              fill="white"
              d="M8 0a8 8 0 110 16A8 8 0 018 0zm0 1.067a6.933 6.933 0 100 13.866A6.933 6.933 0 008 1.067zm0 1.475a.48.48 0 01.48.48V7.52h4.498a.48.48 0 110 .96H8.48v4.498a.48.48 0 11-.96 0V8.48H3.022a.48.48 0 110-.96H7.52V3.022a.48.48 0 01.48-.48z"
            />
          </svg>
          Primary
        </button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={primaryIcon}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>
        <button className="kyper-btn primary" disabled>
          Primary
        </button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={primaryDisabled}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>
        <button className="kyper-btn neutral">Neutral</button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={neutral}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>
        <button className="kyper-btn neutral" disabled>
          Neutral
        </button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={neutralDisabled}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>

        <button className="kyper-btn neutral icon">
          Neutral
          <svg>
            <path
              d="M15.58 2H.42a.419.419 0 00-.42.42v8.423c0 .234.19.42.42.42h7.16v2.525H4.213a.419.419 0 100 .84h7.58a.419.419 0 100-.84H8.42v-2.525h7.16c.235 0 .42-.19.42-.42v-8.42A.422.422 0 0015.58 2zm-.419 8.423H.84v-7.58h14.318v7.58h.003z"
              fill="blue"
            />
          </svg>
        </button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={neutralIcon}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>

        <button className="kyper-btn transparent">Transparent</button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={transparent}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>
        <button className="kyper-btn transparent" disabled>
          Transparent
        </button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={transparentDisabled}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>

        <button className="kyper-btn destructive">Destructive</button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={destructive}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>
        <button className="kyper-btn destructive" disabled>
          Destructive
        </button>
        <Highlight
          {...defaultProps}
          theme={dracula}
          code={destructiveDisabled}
          language="jsx"
        >
          {({ className, style, tokens, getLineProps, getTokenProps }) => (
            <pre className={className} style={style}>
              {tokens.map((line, i) => (
                <div {...getLineProps({ line, key: i })}>
                  {line.map((token, key) => (
                    <span {...getTokenProps({ token, key })} />
                  ))}
                </div>
              ))}
            </pre>
          )}
        </Highlight>
      </main>
    </div>
  );
};

export default Home;
